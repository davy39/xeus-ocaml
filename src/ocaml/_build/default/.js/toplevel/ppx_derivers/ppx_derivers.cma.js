// Generated by js_of_ocaml
//# buildInfo:effects=disabled, kind=cma, use-js-string=true, version=6.2.0

//# unitInfo: Provides: Ppx_derivers
//# unitInfo: Requires: Stdlib, Stdlib__Hashtbl, Stdlib__Printf
//# shape: Ppx_derivers:[F(2),F(1),F(1)]
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    caml_maybe_attach_backtrace = runtime.caml_maybe_attach_backtrace,
    caml_wrap_exception = runtime.caml_wrap_exception;
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) === 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   runtime.jsoo_create_file
    ("/static/cmis/ppx_derivers.cmi",
     "Caml1999I031\x84\x95\xa6\xbe\0\0\x01\xd7\0\0\0c\0\0\x01|\0\0\x01o\xa0,Ppx_derivers\xa0\xc1\xa0'deriver\x01\x01\x0f\b\0\x008\0@@AA@@@@@\xb0\xc04src/ppx_derivers.mliI\x01\0\xda\x01\0\xda\xc0\x04\x02I\x01\0\xda\x01\0\xeb@@@@\xa1\x04\v@A@\xa0\xb0\xa0(register\x01\x01\x10\xd0\xc0\xc1@\xc0\xb3\x90\xa3&stringO@\x90@\x02\x05\xf5\xe1\0@\0\xf0\xc0\xc1@\xc0\xb3\x90\x04\x1a@\x90@\x02\x05\xf5\xe1\0@\0\xf1\xc0\xb3\x90\xa3$unitF@\x90@\x02\x05\xf5\xe1\0@\0\xf2@\x02\x05\xf5\xe1\0@\0\xf3@\x02\x05\xf5\xe1\0@\0\xf4@\xb0\xc0\x04\x1eM\x01\x01Q\x01\x01Q\xc0\x04\x1fM\x01\x01Q\x01\x01y@@\xa1\x04(A@\xa0\xb0\xa0&lookup\x01\x01\x11\xd0\xc0\xc1@\xc0\xb3\x90\x04\x1d@\x90@\x02\x05\xf5\xe1\0@\0\xf5\xc0\xb3\x90\xa3&optionJ\xa0\xc0\xb3\x04\x1f@\x90@\x02\x05\xf5\xe1\0@\0\xf6@\x90@\x02\x05\xf5\xe1\0@\0\xf7@\x02\x05\xf5\xe1\0@\0\xf8@\xb0\xc0\x047P\x01\x01\xa9\x01\x01\xa9\xc0\x048P\x01\x01\xa9\x01\x01\xce@@\xa1\x04AB@\xa0\xb0\xa0(derivers\x01\x01\x12\xd0\xc0\xc1@\xc0\xb3\x90\x04*@\x90@\x02\x05\xf5\xe1\0@\0\xf9\xc0\xb3\x90\xa3$listI\xa0\xc0\x92\xa0\xc0\xb3\x90\x04C@\x90@\x02\x05\xf5\xe1\0@\0\xfb\xa0\xc0\xb3\x04@@\x90@\x02\x05\xf5\xe1\0@\0\xfa@\x02\x05\xf5\xe1\0@\0\xfc@\x90@\x02\x05\xf5\xe1\0@\0\xfd@\x02\x05\xf5\xe1\0@\0\xfe@\xb0\xc0\x04XS\x01\x02\x10\x01\x02\x10\xc0\x04YS\x01\x02\x10\x01\x02>@@\xa1\x04bC@@\x84\x95\xa6\xbe\0\0\0j\0\0\0\x0f\0\0\0:\0\0\0.\xa0\xa0,Ppx_derivers\x900  K;\x1ez9\xa0\xa1Y\xeau`\xfcm\xc7\xa0\xa0&Stdlib\x900y\xb0\xe9\xd3\xb6\xf7\xfe\xd0~\xb3\xcc*\xbb\x96\x1b\x91\xa0\xa08CamlinternalFormatBasics\x900\x8f\x8fcEXy\x8e\xe4\b\xdf<P\xa5S\x9b\x15@\x84\x95\xa6\xbe\0\0\0\x04\0\0\0\x02\0\0\0\x05\0\0\0\x05\xa0\x90@@");
   var
    global_data = runtime.caml_get_global_data(),
    Stdlib_Hashtbl = global_data.Stdlib__Hashtbl,
    Stdlib = global_data.Stdlib,
    Stdlib_Printf = global_data.Stdlib__Printf,
    all = Stdlib_Hashtbl[1].call(null, 0, 42),
    a =
      [0,
       [11,
        "Ppx_deriviers.register: ",
        [3, 0, [11, " is already registered", 0]]],
       "Ppx_deriviers.register: %S is already registered"];
   function register(name, deriver){
    if(Stdlib_Hashtbl[9].call(null, all, name))
     caml_call1(Stdlib_Printf[10].call(null, Stdlib[2], a), name);
    return Stdlib_Hashtbl[5].call(null, all, name, deriver);
   }
   function lookup(name){
    try{var drv = Stdlib_Hashtbl[6].call(null, all, name);}
    catch(exn$0){
     var exn = caml_wrap_exception(exn$0);
     if(exn === Stdlib[8]) return 0;
     throw caml_maybe_attach_backtrace(exn, 0);
    }
    return [0, drv];
   }
   function derivers(param){
    return Stdlib_Hashtbl[14].call
            (null,
             function(name, drv, acc){return [0, [0, name, drv], acc];},
             all,
             0);
   }
   var Ppx_derivers = [0, register, lookup, derivers];
   runtime.caml_register_global(4, Ppx_derivers, "Ppx_derivers");
   return;
  }
  (globalThis));

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHB4X2Rlcml2ZXJzLmNtYS5qcyIsInNlY3Rpb25zIjpbeyJvZmZzZXQiOnsibGluZSI6MTAsImNvbHVtbiI6MH0sIm1hcCI6eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHB4X2Rlcml2ZXJzLmNtYS5qcyIsInNvdXJjZXMiOlsiL2J1aWx0aW4vYmxhY2tib3gubWwiLCIvaG9tZS9kYXZ5Ly5vcGFtLzQuMTQuMi9saWIvcHB4X2Rlcml2ZXJzL3BweF9kZXJpdmVycy5tbCJdLCJzb3VyY2VzQ29udGVudCI6WyIoKiBnZW5lcmF0ZWQgY29kZSAqKSIsInR5cGUgZGVyaXZlciA9IC4uXG5cbmxldCBhbGwgPSBIYXNodGJsLmNyZWF0ZSA0MlxuXG5sZXQgcmVnaXN0ZXIgbmFtZSBkZXJpdmVyID1cbiAgaWYgSGFzaHRibC5tZW0gYWxsIG5hbWUgdGhlblxuICAgIFByaW50Zi5rc3ByaW50ZiBmYWlsd2l0aFxuICAgICAgXCJQcHhfZGVyaXZpZXJzLnJlZ2lzdGVyOiAlUyBpcyBhbHJlYWR5IHJlZ2lzdGVyZWRcIiBuYW1lO1xuICBIYXNodGJsLmFkZCBhbGwgbmFtZSBkZXJpdmVyXG5cbmxldCBsb29rdXAgbmFtZSA9XG4gIG1hdGNoIEhhc2h0YmwuZmluZCBhbGwgbmFtZSB3aXRoXG4gIHwgZHJ2IC0+IFNvbWUgZHJ2XG4gIHwgZXhjZXB0aW9uIE5vdF9mb3VuZCAtPiBOb25lXG5cbmxldCBkZXJpdmVycyAoKSA9XG4gIEhhc2h0YmwuZm9sZCAoZnVuIG5hbWUgZHJ2IGFjYyAtPiAobmFtZSwgZHJ2KSA6OiBhY2MpIGFsbCBbXVxuIl0sIm5hbWVzIjpbInJ1bnRpbWUiLCJjYW1sX21heWJlX2F0dGFjaF9iYWNrdHJhY2UiLCJjYW1sX3dyYXBfZXhjZXB0aW9uIiwiY2FtbF9jYWxsMSIsImYiLCJhMCIsImdsb2JhbF9kYXRhIiwiU3RkbGliX0hhc2h0YmwiLCJTdGRsaWIiLCJTdGRsaWJfUHJpbnRmIiwiYWxsIiwicmVnaXN0ZXIiLCJuYW1lIiwiZGVyaXZlciIsImxvb2t1cCIsImRydiIsImV4biIsImRlcml2ZXJzIiwicGFyYW0iLCJhY2MiLCJQcHhfZGVyaXZlcnMiXSwibWFwcGluZ3MiOiJJQUFBQSxVQUFBO0FBQUEsSUFBQUMsOEJBQUE7QUFBQSxJQUFBQyxzQkFBQTtBQUFBLFlBQUFDLFdBQUFDLEdBQUFDO0FBQUFBLElBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLElBQUFDLGNBQUE7QUFBQSxJQUFBQyxpQkFBQTtBQUFBLElBQUFDLFNBQUE7QUFBQSxJQUFBQyxnQkFBQTtBQUFBLElBQUFDLE1DRVU7QUFBQTtBQUFBLE1BQWlCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxZQUFBQyxTQUFBQyxNQUFBQztBQUFBQSxJQUd0QjtBQUFBLEtBQ0Q7QUFBQSxJQUVGLHVEQUE0QjtBQUFBO0FBQUEsWUFBQUMsT0FBQUY7QUFBQUEsSUFHNUIsUUFBQUcsTUFBTTtBQUFBLFVBQUFDO0FBQUFBLFNBQUFBLE1EWFI7QUFBQSwyQkNhMkI7QUFBQSxLRGIzQjtBQUFBO0FBQUEsSUNZVztBQUFBLEdBQ29CO0FBQUEsWUFBQUMsU0FBQUM7QUFBQUEsSUFHN0I7QUFBQTtBQUFBLHNCQUFBTixNQUFBRyxLQUFBSSxLQUFrQyxnQ0FBa0I7QUFBQTtBQUFBLGVBQVE7QUFBQTtBQUFBLE9BQUFDLGVBZG5DO0FBQUE7QUFBQTtBQUFBLEVERjNCIiwiaWdub3JlTGlzdCI6WzBdfX1dfQ==
