name: CI
on:

  workflow_dispatch:
  pull_request:
  push:
    branches:
     - main

  schedule:
    - cron: '0 2 * * *' # run at 2 AM UTC

jobs:
  
  emscripten_wasm:

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        emsdk_ver: ["3.1.73"]

    steps:
      - uses: actions/checkout@v5

      - name: Get number of CPU cores
        uses: SimenB/github-actions-cpu-cores@v2

      - name: Set-up OCaml
        uses: ocaml/setup-ocaml@v3
        with:
          ocaml-compiler: 5  

      - name: Install micromamba
        uses: mamba-org/setup-micromamba@v2
        with:
          environment-file: environment-wasm-build.yml
          environment-name: xeus-ocaml-wasm-build

      - name: Build conda package
        uses: prefix-dev/rattler-build-action@v0.2.34
        with:
          build-args: -c  https://repo.prefix.dev/emscripten-forge-dev  -c conda-forge --target-platform emscripten-wasm32
          recipe-path: recipe/recipe.yaml
      - name: Build
        shell: bash -l {0}
        run: |
          opam install dune js_of_ocaml lwt graphics js_of_ocaml-lwt js_of_ocaml-ppx js_of_ocaml-toplevel base
          emsdk update
          emsdk install 3.1.73
          emsdk activate 3.1.73
          source $CONDA_EMSDK_DIR/emsdk_env.sh
          micromamba create -f environment-wasm-host.yml --platform=emscripten-wasm32

          mkdir build
          pushd build

          export EMPACK_PREFIX=$MAMBA_ROOT_PREFIX/envs/xeus-ocaml-wasm-build
          export PREFIX=$MAMBA_ROOT_PREFIX/envs/xeus-ocaml-wasm-host
          export CMAKE_PREFIX_PATH=$PREFIX
          export CMAKE_SYSTEM_PREFIX_PATH=$PREFIX

          emcmake cmake \
            -DCMAKE_BUILD_TYPE=Release                        \
            -DCMAKE_PREFIX_PATH=$PREFIX                       \
            -DCMAKE_INSTALL_PREFIX=$PREFIX                    \
            -DCMAKE_FIND_ROOT_PATH_MODE_PACKAGE=ON            \
            ..
          
          make -j${{ steps.cpu-cores.outputs.count }}

          for pkg in $(find output -type f \( -name "*.conda" -o -name "*.tar.bz2" \) ); do
            echo "Uploading ${pkg}"
            rattler-build upload prefix -c emscripten "${pkg}"
          done